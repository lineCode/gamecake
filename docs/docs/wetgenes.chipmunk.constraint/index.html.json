{
 "_dirname": "{_root}docs/wetgenes.chipmunk.constraint",
 "_docs": [
  {
   "count": 3,
   "name": "glslang"
  },
  {
   "count": 1,
   "name": "glslang.lint_gles2"
  },
  {
   "count": 1,
   "name": "glslang.parse_chunks"
  },
  {
   "count": 232,
   "name": "wetgenes"
  },
  {
   "count": 64,
   "name": "wetgenes.chipmunk"
  },
  {
   "count": 4,
   "name": "wetgenes.chipmunk.arbiter"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.arbiter.ignore"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.arbiter.points"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.arbiter.surface_velocity"
  },
  {
   "count": 16,
   "name": "wetgenes.chipmunk.body"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.body.angle"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.body.angular_velocity"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.body.apply_force"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.body.apply_impulse"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.body.center_of_gravity"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.body.force"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.body.mass"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.body.moment"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.body.position"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.body.position_func"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.body.shape"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.body.torque"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.body.type"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.body.velocity"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.body.velocity_func"
  },
  {
   "count": 6,
   "name": "wetgenes.chipmunk.constraint"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.constraint.collide_bodies"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.constraint.error_bias"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.constraint.impulse"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.constraint.max_bias"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.constraint.max_force"
  },
  {
   "count": 11,
   "name": "wetgenes.chipmunk.shape"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.shape.bounding_box"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.shape.collision_type"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.shape.elasticity"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.shape.filter"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.shape.friction"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.shape.query_point"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.shape.query_segment"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.shape.radius"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.shape.sensor"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.shape.surface_velocity"
  },
  {
   "count": 26,
   "name": "wetgenes.chipmunk.space"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.space.add"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.space.add_handler"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.space.body"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.space.collision_bias"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.space.collision_persistence"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.space.collision_slop"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.space.constraint"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.space.contains"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.space.current_time_step"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.space.damping"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.space.gravity"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.space.idle_speed_threshold"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.space.iterations"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.space.locked"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.space.query_bounding_box"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.space.query_point"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.space.query_point_nearest"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.space.query_segment"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.space.query_segment_first"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.space.query_shape"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.space.reindex"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.space.remove"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.space.sleep_time_threshold"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.space.step"
  },
  {
   "count": 1,
   "name": "wetgenes.chipmunk.space.type"
  },
  {
   "count": 1,
   "name": "wetgenes.export"
  },
  {
   "count": 23,
   "name": "wetgenes.gamecake"
  },
  {
   "count": 18,
   "name": "wetgenes.gamecake.fun"
  },
  {
   "count": 4,
   "name": "wetgenes.gamecake.fun.chatdown"
  },
  {
   "count": 1,
   "name": "wetgenes.gamecake.fun.chatdown.parse"
  },
  {
   "count": 1,
   "name": "wetgenes.gamecake.fun.chatdown.setup"
  },
  {
   "count": 1,
   "name": "wetgenes.gamecake.fun.chatdown.setup_chat"
  },
  {
   "count": 13,
   "name": "wetgenes.gamecake.fun.entities"
  },
  {
   "count": 1,
   "name": "wetgenes.gamecake.fun.entities.add"
  },
  {
   "count": 1,
   "name": "wetgenes.gamecake.fun.entities.call"
  },
  {
   "count": 1,
   "name": "wetgenes.gamecake.fun.entities.caste"
  },
  {
   "count": 1,
   "name": "wetgenes.gamecake.fun.entities.get"
  },
  {
   "count": 1,
   "name": "wetgenes.gamecake.fun.entities.manifest"
  },
  {
   "count": 1,
   "name": "wetgenes.gamecake.fun.entities.reset"
  },
  {
   "count": 1,
   "name": "wetgenes.gamecake.fun.entities.set"
  },
  {
   "count": 1,
   "name": "wetgenes.gamecake.fun.entities.sortby_update"
  },
  {
   "count": 4,
   "name": "wetgenes.gamecake.fun.entities.systems"
  },
  {
   "count": 1,
   "name": "wetgenes.gamecake.fun.entities.systems.call"
  },
  {
   "count": 1,
   "name": "wetgenes.gamecake.fun.entities.systems.insert"
  },
  {
   "count": 1,
   "name": "wetgenes.gamecake.fun.entities.systems.remove"
  },
  {
   "count": 2,
   "name": "wetgenes.gamecake.oven"
  },
  {
   "count": 1,
   "name": "wetgenes.gamecake.oven.bake"
  },
  {
   "count": 2,
   "name": "wetgenes.gamecake.widgets"
  },
  {
   "count": 1,
   "name": "wetgenes.gamecake.widgets.setup"
  },
  {
   "count": 33,
   "name": "wetgenes.grd"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.adjust_contrast"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.adjust_hsv"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.adjust_rgb"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.attr_redux"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.blit"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.clear"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.clip"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.convert"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.copy_data"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.copy_data_layer"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.create"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.create_convert"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.create_normal"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.destroy"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.duplicate"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.flipy"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.info"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.load"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.load_data"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.load_file"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.paint"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.palette"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.pixels"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.quant"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.remap"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.reset"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.resize"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.save"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.scale"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.shrink"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.sort_cmap"
  },
  {
   "count": 1,
   "name": "wetgenes.grd.stream"
  },
  {
   "count": 2,
   "name": "wetgenes.grdsvg"
  },
  {
   "count": 1,
   "name": "wetgenes.grdsvg.string"
  },
  {
   "count": 3,
   "name": "wetgenes.json"
  },
  {
   "count": 1,
   "name": "wetgenes.json.decode"
  },
  {
   "count": 1,
   "name": "wetgenes.json.encode"
  },
  {
   "count": 1,
   "name": "wetgenes.lookup"
  },
  {
   "count": 2,
   "name": "wetgenes.package"
  },
  {
   "count": 1,
   "name": "wetgenes.package.reload"
  },
  {
   "count": 4,
   "name": "wetgenes.plate"
  },
  {
   "count": 1,
   "name": "wetgenes.plate.replace_lookup"
  },
  {
   "count": 1,
   "name": "wetgenes.plate.replace_lookup_istable"
  },
  {
   "count": 1,
   "name": "wetgenes.plate.table_lookup"
  },
  {
   "count": 1,
   "name": "wetgenes.safecall"
  },
  {
   "count": 1,
   "name": "wetgenes.safewrap"
  },
  {
   "count": 1,
   "name": "wetgenes.set_env"
  },
  {
   "count": 1,
   "name": "wetgenes.snippets"
  },
  {
   "count": 94,
   "name": "wetgenes.tardis"
  },
  {
   "count": 5,
   "name": "wetgenes.tardis.array"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.array.__tostring"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.array.compare"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.array.product"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.array.set"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.class"
  },
  {
   "count": 2,
   "name": "wetgenes.tardis.line"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.line.new"
  },
  {
   "count": 10,
   "name": "wetgenes.tardis.m2"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m2.adjugate"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m2.cofactor"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m2.determinant"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m2.identity"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m2.inverse"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m2.minor_xy"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m2.new"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m2.scale"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m2.transpose"
  },
  {
   "count": 10,
   "name": "wetgenes.tardis.m3"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m3.adjugate"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m3.cofactor"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m3.determinant"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m3.identity"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m3.inverse"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m3.minor_xy"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m3.new"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m3.scale"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m3.transpose"
  },
  {
   "count": 17,
   "name": "wetgenes.tardis.m4"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m4.add"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m4.adjugate"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m4.cofactor"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m4.determinant"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m4.identity"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m4.inverse"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m4.lerp"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m4.minor_xy"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m4.new"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m4.rotate"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m4.scale"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m4.scale_v3"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m4.setrot"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m4.sub"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m4.translate"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.m4.transpose"
  },
  {
   "count": 2,
   "name": "wetgenes.tardis.plane"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.plane.new"
  },
  {
   "count": 6,
   "name": "wetgenes.tardis.q4"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.q4.identity"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.q4.lerp"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.q4.new"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.q4.rotate"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.q4.setrot"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.type"
  },
  {
   "count": 13,
   "name": "wetgenes.tardis.v2"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v2.add"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v2.cross"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v2.dot"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v2.identity"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v2.len"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v2.lenlen"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v2.mul"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v2.new"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v2.normalize"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v2.oo"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v2.scale"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v2.sub"
  },
  {
   "count": 13,
   "name": "wetgenes.tardis.v3"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v3.add"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v3.cross"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v3.dot"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v3.identity"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v3.len"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v3.lenlen"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v3.mul"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v3.new"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v3.normalize"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v3.oo"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v3.scale"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v3.sub"
  },
  {
   "count": 13,
   "name": "wetgenes.tardis.v4"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v4.add"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v4.dot"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v4.identity"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v4.len"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v4.lenlen"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v4.mul"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v4.new"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v4.normalize"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v4.oo"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v4.scale"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v4.sub"
  },
  {
   "count": 1,
   "name": "wetgenes.tardis.v4.to_v3"
  }
 ],
 "_docs_json": {
  "dirname": "{_root}docs",
  "dirs": {
   "../../lua": ".lua"
  },
  "ignore": {
   "node_modules": true
  },
  "urlprefix": {
   "../lua": "https://github.com/xriss/gamecake/blob/master/lua/"
  }
 },
 "_filename": "{_root}docs/wetgenes.chipmunk.constraint/index.html",
 "_flags": {
  "body": {
   "trim": "ends"
  },
  "css": {
   "same": "append"
  },
  "head": {
   "trim": "ends"
  },
  "html": {
   "trim": "ends"
  },
  "menuwrap": {
   "trim": "ends"
  },
  "menuwrap_link": {
   "trim": "ends"
  },
  "menuwrap_link1": {
   "trim": "ends"
  },
  "menuwrap_link2": {
   "trim": "ends"
  },
  "title": {
   "trim": "ends"
  }
 },
 "_list": [
  {
   "body": "<pre><code>constraint=chipmunk.constraint(abody,bbody,form,...)\n</code></pre><p>Create a constraint between two bodies.</p>\n<p>You will need to add the constraint to a space before it has any effect \nso it is normally preferable to use the space:constraint function which \nwill call this function and then automatically add the constraint into \nthe space.</p>\n<pre><code>constraint=chipmunk.constraint(abody,bbody,&quot;pin_join&quot;,ax,ay,bx,by)\n</code></pre><p>form of &quot;pin_joint&quot; ...</p>\n<pre><code>constraint=chipmunk.constraint(abody,bbody,&quot;slide_joint&quot;,ax,ay,bx,by,fl,fh)\n</code></pre><p>form of &quot;slide_joint&quot; ...</p>\n<pre><code>constraint=chipmunk.constraint(abody,bbody,&quot;pivot_joint&quot;,x,y)\nconstraint=chipmunk.constraint(abody,bbody,&quot;pivot_joint&quot;,ax,ay,bx,by)\n</code></pre><p>form of &quot;pivot_joint&quot; ...</p>\n<pre><code>constraint=chipmunk.constraint(abody,bbody,&quot;groove_joint&quot;,ax,ay,bx,by,cx,cy)\n</code></pre><p>form of &quot;groove_joint&quot; ...</p>\n<pre><code>constraint=chipmunk.constraint(abody,bbody,&quot;damped_spring&quot;,ax,ay,bx,by,fl,fs,fd)\n</code></pre><p>form of &quot;damped_spring&quot; ...</p>\n<pre><code>constraint=chipmunk.constraint(abody,bbody,&quot;damped_rotary_spring&quot;,fa,fs,fd)\n</code></pre><p>form or &quot;damped_rotary_spring&quot; ...</p>\n<pre><code>constraint=chipmunk.constraint(abody,bbody,&quot;rotary_limit_joint&quot;,fl,fh)\n</code></pre><p>form of &quot;rotary_limit_joint&quot; ...</p>\n<pre><code>constraint=chipmunk.constraint(abody,bbody,&quot;ratchet_joint&quot;,fp,fr)\n</code></pre><p>form of &quot;ratchet_joint&quot; ...</p>\n<pre><code>constraint=chipmunk.constraint(abody,bbody,&quot;gear_joint&quot;,fp,fr)\n</code></pre><p>form of &quot;gear_joint&quot; ...</p>\n<pre><code>constraint=chipmunk.constraint(abody,bbody,&quot;simple_motor&quot;,fr)\n</code></pre><p>form of &quot;simple_motor&quot; ...</p>\n",
   "count": 6,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 167,
   "name": "wetgenes.chipmunk.constraint",
   "url": "https://github.com/xriss/gamecake/blob/master/lua//wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>v=constraint:collide_bodies()\nv=constraint:collide_bodies(v)\n</code></pre><p>Get and/or Set the max collide bodies flag for this constraint.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 1170,
   "name": "wetgenes.chipmunk.constraint.collide_bodies",
   "url": "https://github.com/xriss/gamecake/blob/master/lua//wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>v=constraint:error_bias()\nv=constraint:error_bias(v)\n</code></pre><p>Get and/or Set the error bias for this constraint.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 1146,
   "name": "wetgenes.chipmunk.constraint.error_bias",
   "url": "https://github.com/xriss/gamecake/blob/master/lua//wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>v=constraint:impulse()\n</code></pre><p>Get the last impulse for this constraint.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 1182,
   "name": "wetgenes.chipmunk.constraint.impulse",
   "url": "https://github.com/xriss/gamecake/blob/master/lua//wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>v=constraint:max_bias()\nv=constraint:max_bias(v)\n</code></pre><p>Get and/or Set the max bias for this constraint.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 1158,
   "name": "wetgenes.chipmunk.constraint.max_bias",
   "url": "https://github.com/xriss/gamecake/blob/master/lua//wetgenes/chipmunk.lua"
  },
  {
   "body": "<pre><code>v=constraint:max_force()\nv=constraint:max_force(v)\n</code></pre><p>Get and/or Set the max force for this constraint.</p>\n",
   "count": 1,
   "file": "../lua/wetgenes/chipmunk.lua",
   "line": 1134,
   "name": "wetgenes.chipmunk.constraint.max_force",
   "url": "https://github.com/xriss/gamecake/blob/master/lua//wetgenes/chipmunk.lua"
  }
 ],
 "_output_chunkname": "html",
 "_output_filename": "docs/wetgenes.chipmunk.constraint/index.html",
 "_root": "../../",
 "_site": "{_root}",
 "_sourcename": "docs/wetgenes.chipmunk.constraint/index.html",
 "body": "<div class=\"default\">\n\t<div class=\"nav\">\n\t\t<div class=\"topics\">\n\t\t\t<a class=\"home\" href=\"/\">gamecake^</a>\n\t\t\t<a class=\"par\" href=\"{_docs_json.dirname}\"><span>/</span></a>\n\t\t\t{_docs:menuwrap}\n\t\t</div>\n\t</div>\n\t<div class=\"main\">\n\t\t{_list:wrap}\n\t</div>\n</div>\n",
 "css": "\n*\t\t{box-sizing:border-box;}\nbody\t{background:#f7f4fd; font-family:mono, sans-serif; font-size:16px; line-height:24px; color:#3a3a3a; width:100%; padding:50px;}\nh1\t\t{font-size:4em; font-weight:normal; color:#1400ff;}\nh2\t\t{font-size:2em; font-weight:normal;}\n\na\t\t{color:#1400ff;}\n\na.bar\t{color:#f7f4fd; background-color:#3a3a3a; border-radius:4px; padding:5px; text-decoration:none; border-bottom:none;}\na.bar:hover\t{background-color:#1400ff; border-bottom:none;}\n\n\n.nav\t{display:inline-block; vertical-align:top; width:50%;}\n.nav:nth-of-type(2)\t{text-align:right;}\n.nav span\t{font-weight:bold;}\n\n.line, .blog_wrap, hr\t{border-top:1px dashed #1400ff; margin-top:40px; margin-bottom:40px; position:relative;}\n.blog_info\t{position:absolute; right:10px; top:10px;}\n",
 "head": "<title>{title}</title>\n<style>\n{css}\n</style>",
 "html": "<html>\n\t<head>\n\t\t<title>{title}</title>\n\t\t<link rel='stylesheet' href='{_docs_json.dirname}/docs.css' />\n\t</head>\n\t<body>{body}</body>\n</html>\n",
 "menuwrap": "{_it:menuwrap_link}",
 "menuwrap_link": "{_it.count>1&&_it:menuwrap_link2}\n{_it.count==1&&_it:menuwrap_link1}",
 "menuwrap_link1": "<a class=\"sub\" href=\"{_docs_json.dirname}/{_it.name}\"><span>/{_it.name}</span></a>",
 "menuwrap_link2": "<a class=\"par\" href=\"{_docs_json.dirname}/{_it.name}\"><span>/{_it.name}</span></a>",
 "title": "Gamecake docs!",
 "wrap": "\n<div class=\"wrap\">\n<h1><a href=\"{_docs_json.dirname}/{_it.name}\">{_it.name}</a></h1>\n<div class=\"source\"><a href=\"{_it.url}#L{_it.line}\">{_it.url}</a></div>\n<div>{[[}{_it.body}{]]}</div>\n</div>\n"
}